import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class AnonymousThreat {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		List<String> myList =Arrays.stream(sc.nextLine()
							.split("\\s+"))
							.collect(Collectors.toList());
		
		String[] command = sc.nextLine().split("\\s+");
		
		while(!"3:1".equals(command[0])) {
			
			if("merge".equals(command[0])) {
				int startIndex = Integer.parseInt(command[1]);
				int endIndex = Integer.parseInt(command[2]);
				
				if((startIndex >= myList.size() && endIndex >= myList.size()) || (startIndex <= 0 && endIndex <= 0 )) {
					command = sc.nextLine().split("\\s+");
					continue;
				}
				
				String data = "";
				List<String> helpList = new ArrayList<>();
				
				if(startIndex < 0 && endIndex < myList.size()) {
									
					for(int i = 0; i <= endIndex; i++) {
						data += myList.get(i);
						
						
						if(i!=0) {
							
							helpList.add(myList.get(i));
						}
					}
					
					myList.set(0, data);
					myList.removeAll(helpList);
					
				}
				
				else if(endIndex >= myList.size() && (startIndex >= 0 && startIndex < myList.size())) {
										
					for(int i = startIndex; i < myList.size(); i++) {
						data += myList.get(i);
						
						helpList.add(myList.get(i));
						
					}
					
					myList.set(startIndex, data);
					myList.removeAll(helpList);
					
				}
				else if(startIndex < 0 && endIndex >= myList.size()) {
				
					for(int i = 0; i < myList.size(); i++) {
						data += myList.get(i);
						
						
						if(i!=0) {
							
							helpList.add(myList.get(i));
						}
						
					}
					
					myList.set(0, data);
					myList.removeAll(helpList);
					
				}
				
				else {
					
					for(int i = startIndex; i <= endIndex; i++) {
						data += myList.get(i);
						
						helpList.add(myList.get(i));
						
						
					}
					
					myList.set(startIndex, data);
					myList.removeAll(helpList);
					
				}
			}
			
			else if("divide".equals(command[0])) {
				int index = Integer.parseInt(command[1]);
				int partitions = Integer.parseInt(command[2]);
				
				if(index >= myList.size() || index < 0) {
					command = sc.nextLine().split("\\s+");
					continue;
				}
				
				String data = myList.get(index);
				myList.remove(index);
				int parts = data.length() / partitions;
				int left = data.length() % partitions;
				int indexOfString = 0;
				int helpIndex = index;	
			
				if(data.length() % partitions == 0) {
					
					
					for(int j = 0; j < partitions ; j++) {
						String help = "";
						for(int i = 0; i < parts; i++) {
						help += data.charAt(indexOfString++);
						
						}
						myList.add(helpIndex, help);
						helpIndex++;
					}
				}
					else {
						for(int j = 0; j < partitions ; j++) {
							String help = "";
							if(j == partitions - 1) {
								for(int i = 0; i < parts+left; i++) {
									help += data.charAt(indexOfString++);
									
									}
								myList.add(helpIndex, help);
								helpIndex++;
							}
							else {
								for(int i = 0; i < parts; i++) {
								
									help += data.charAt(indexOfString++);
									
									}
								myList.add(helpIndex, help);
								helpIndex++;
								}
						}
				}
			}
			
			command = sc.nextLine().split("\\s+");
			
		}
		System.out.println(myList.toString().replaceAll("\\[|,|\\]", ""));
	}

}
