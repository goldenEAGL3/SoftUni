import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;

public class Orders {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        LinkedHashMap<String, LinkedHashMap<Double, Integer>> myOrders = new LinkedHashMap<>();

        String[] input = sc.nextLine().split("\\s+");

        while (!"buy".equals(input[0])) {
            String productName = input[0];
            double productPrice = Double.parseDouble(input[1]);
            int quantity = Integer.parseInt(input[2]);

            if (!myOrders.containsKey(productName)) {
                myOrders.put(productName, new LinkedHashMap<>());
                myOrders.get(productName).put(productPrice, 0);
                myOrders.get(productName).put(productPrice, myOrders.get(productName).get(productPrice) + quantity);
            }
            else {
                int oldQuantity = 0;
                double oldProductPrice = 0;
                for (Map.Entry<Double, Integer> kvp : myOrders.get(productName).entrySet()) {
                    oldQuantity = kvp.getValue();
                    oldProductPrice = kvp.getKey();
                }
               myOrders.get(productName).remove(oldProductPrice);
               myOrders.get(productName).put(productPrice, oldQuantity + quantity);
            }
            input = sc.nextLine().split("\\s+");
        }

        for (Map.Entry<String, LinkedHashMap<Double, Integer>> outerMap : myOrders.entrySet()) {
            double price = 0;
            for (Map.Entry<Double, Integer> innerMap : outerMap.getValue().entrySet()) {
                price = innerMap.getValue() * innerMap.getKey();
            }
            System.out.printf("%s -> %.2f%n", outerMap.getKey(), price);
        }
    }
}
